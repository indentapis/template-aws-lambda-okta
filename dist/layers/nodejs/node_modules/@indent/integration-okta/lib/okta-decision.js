"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDefaultApprovalEvent = exports.OktaDecisionIntegration = void 0;
var base_integration_1 = require("@indent/base-integration");
var okta_api_1 = require("./okta-api");
var version = require('../package.json').version;
var OktaDecisionIntegration = /** @class */ (function (_super) {
    __extends(OktaDecisionIntegration, _super);
    function OktaDecisionIntegration(opts) {
        var _this = _super.call(this, opts) || this;
        if (opts) {
            _this._name = opts.name;
            _this._autoApprovedOktaGroups = opts.autoApprovedOktaGroups;
            _this._getApprovalEvent = opts.getApprovalEvent;
        }
        return _this;
    }
    OktaDecisionIntegration.prototype.GetInfo = function () {
        return {
            version: version,
            name: 'indent-okta-groups-decision-webhook',
            capabilities: ['GetDecision'],
        };
    };
    OktaDecisionIntegration.prototype.HealthCheck = function () {
        return { status: { code: 0 } };
    };
    OktaDecisionIntegration.prototype.MatchDecision = function (_req) {
        return true;
    };
    OktaDecisionIntegration.prototype.GetDecision = function (req) {
        return __awaiter(this, void 0, void 0, function () {
            var status, claims, reqEvent, response, groups, groupsSet, claim;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        status = {};
                        claims = [];
                        reqEvent = req.events.find(function (e) { return e.event === 'access/request'; });
                        return [4 /*yield*/, (0, okta_api_1.callOktaAPI)(this, {
                                method: 'get',
                                url: "/api/v1/users/".concat(reqEvent.actor.labels.oktaId || reqEvent.actor.id, "/groups"),
                            })];
                    case 1:
                        response = (_a.sent()).response;
                        groups = response.data;
                        groupsSet = new Set(groups.map(function (g) { return g.id; }));
                        if (reqEvent &&
                            this._autoApprovedOktaGroups.some(function (gId) { return groupsSet.has(gId); })) {
                            claim = this._getApprovalEvent
                                ? this._getApprovalEvent(reqEvent)
                                : getDefaultApprovalEvent(reqEvent);
                            claims.push(claim);
                        }
                        return [2 /*return*/, { status: status, claims: claims }];
                }
            });
        });
    };
    return OktaDecisionIntegration;
}(base_integration_1.BaseHttpIntegration));
exports.OktaDecisionIntegration = OktaDecisionIntegration;
function getDefaultApprovalEvent(reqEvent) {
    var expireTime = new Date();
    var hours = 1;
    expireTime.setTime(expireTime.getTime() + 1 * 60 * 60 * 1000);
    return {
        actor: {
            displayName: 'Okta Approval Bot',
            email: 'bot@indent.com',
            id: 'custom-okta-approval-bot',
            kind: 'indent.v1.Bot',
        },
        event: 'access/approve',
        meta: {
            labels: __assign({ 'indent.com/time/duration': "".concat(hours, "h0m0s"), 'indent.com/time/expires': expireTime.toISOString() }, reqEvent.meta.labels),
        },
        resources: __spreadArray([reqEvent.actor], reqEvent.resources, true),
        timestamp: new Date().toISOString(),
        reason: 'Auto-approved based on existing group membership',
    };
}
exports.getDefaultApprovalEvent = getDefaultApprovalEvent;
//# sourceMappingURL=okta-decision.js.map