"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OktaGroupIntegration = void 0;
var base_integration_1 = require("@indent/base-integration");
var okta_api_1 = require("./okta-api");
var version = require('../package.json').version;
var OKTA_DOMAIN = process.env.OKTA_DOMAIN || '';
var OktaGroupIntegration = /** @class */ (function (_super) {
    __extends(OktaGroupIntegration, _super);
    function OktaGroupIntegration(opts) {
        var _this = _super.call(this, opts) || this;
        if (opts) {
            _this._name = opts.name;
        }
        return _this;
    }
    OktaGroupIntegration.prototype.GetInfo = function () {
        return {
            version: version,
            name: 'indent-okta-groups-webhook',
            capabilities: ['ApplyUpdate', 'PullUpdate'],
        };
    };
    OktaGroupIntegration.prototype.HealthCheck = function () {
        return { status: { code: 0 } };
    };
    OktaGroupIntegration.prototype.MatchApply = function (req) {
        return (req.events.filter(function (e) {
            var _a;
            return Boolean((_a = e.resources) === null || _a === void 0 ? void 0 : _a.filter(function (r) { var _a; return (_a = r.kind) === null || _a === void 0 ? void 0 : _a.toLowerCase().includes('okta.v1.group'); }).length);
        }).length > 0);
    };
    OktaGroupIntegration.prototype.ApplyUpdate = function (req) {
        return __awaiter(this, void 0, void 0, function () {
            var auditEvent, event, resources, user, group, method, status;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        auditEvent = req.events.find(function (e) { return /grant|revoke/.test(e.event); });
                        event = auditEvent.event, resources = auditEvent.resources;
                        user = getOktaIdFromResources(resources, 'user');
                        group = getOktaIdFromResources(resources, 'app') ||
                            getOktaIdFromResources(resources, 'group');
                        method = event === 'access/grant'
                            ? // If it's a grant event, add the user
                                'PUT'
                            : // Otherwise it's a revoke event, remove the user
                                'DELETE';
                        return [4 /*yield*/, (0, okta_api_1.callOktaAPI)(this, {
                                method: method,
                                url: "/api/v1/groups/".concat(group, "/users/").concat(user),
                            })];
                    case 1:
                        status = (_a.sent()).status;
                        return [2 /*return*/, { status: status }];
                }
            });
        });
    };
    OktaGroupIntegration.prototype.MatchPull = function (req) {
        return req.kinds.map(function (k) { return k.toLowerCase(); }).includes('okta.v1.group');
    };
    OktaGroupIntegration.prototype.PullUpdate = function (req) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, status, response, timestamp, resources;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.MatchPull(req)) {
                            return [2 /*return*/, {
                                    status: {
                                        code: base_integration_1.StatusCode.INVALID_ARGUMENT,
                                        details: [
                                            {
                                                expectedKindLower: 'okta.v1.group',
                                                actualKinds: req.kinds,
                                            },
                                        ],
                                    },
                                }];
                        }
                        return [4 /*yield*/, (0, okta_api_1.callOktaAPI)(this, {
                                method: 'GET',
                                url: '/api/v1/groups',
                            })];
                    case 1:
                        _a = _b.sent(), status = _a.status, response = _a.response;
                        timestamp = new Date().toISOString();
                        resources = response.data.map(function (group) {
                            var _a, _b, _c;
                            return pick({
                                id: [OKTA_DOMAIN, group.id].join('/api/v1/groups/'),
                                kind: 'okta.v1.Group',
                                email: (_a = group.profile) === null || _a === void 0 ? void 0 : _a.email,
                                displayName: (_b = group.profile) === null || _b === void 0 ? void 0 : _b.name,
                                labels: {
                                    oktaId: group.id,
                                    description: ((_c = group.profile) === null || _c === void 0 ? void 0 : _c.description) || '',
                                    oktaGroupType: group.type,
                                    timestamp: timestamp,
                                },
                            });
                        });
                        return [2 /*return*/, { status: status, resources: resources }];
                }
            });
        });
    };
    return OktaGroupIntegration;
}(base_integration_1.BaseHttpIntegration));
exports.OktaGroupIntegration = OktaGroupIntegration;
var getOktaIdFromResources = function (resources, kind) {
    return resources
        .filter(function (r) { return r.kind && r.kind.toLowerCase().includes(kind.toLowerCase()); })
        .map(function (r) {
        if (r.labels && r.labels.oktaId) {
            return r.labels.oktaId;
        }
        return r.id;
    })[0];
};
var pick = function (obj) {
    return Object.keys(obj).reduce(function (acc, key) {
        var _a;
        return (__assign(__assign({}, acc), (typeof obj[key] !== 'undefined' ? (_a = {}, _a[key] = obj[key], _a) : {})));
    }, {});
};
//# sourceMappingURL=okta-group.js.map