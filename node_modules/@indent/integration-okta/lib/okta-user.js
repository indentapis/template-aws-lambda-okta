"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OktaUserIntegration = void 0;
var base_integration_1 = require("@indent/base-integration");
var okta_api_1 = require("./okta-api");
var version = require('../package.json').version;
var OKTA_DOMAIN = process.env.OKTA_DOMAIN || '';
// Okta Slack App ID - used to more accurately link okta users to slack users
var APP_ID = process.env.OKTA_SLACK_APP_ID || '';
var OktaUserIntegration = /** @class */ (function (_super) {
    __extends(OktaUserIntegration, _super);
    function OktaUserIntegration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OktaUserIntegration.prototype.GetInfo = function () {
        return {
            version: version,
            name: 'indent-okta-users-webhook',
            capabilities: ['PullUpdate'],
        };
    };
    OktaUserIntegration.prototype.HealthCheck = function () {
        return { status: {} };
    };
    OktaUserIntegration.prototype.MatchPull = function (req) {
        return req.kinds.map(function (k) { return k.toLowerCase(); }).includes('okta.v1.user');
    };
    OktaUserIntegration.prototype.PullUpdate = function (req) {
        return __awaiter(this, void 0, void 0, function () {
            var timestamp, _a, status, oktaUserResources, oktaUserMapById, appUserResources, _b, slackUserResources, resources;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        if (!this.MatchPull(req)) {
                            return [2 /*return*/, {
                                    status: {
                                        code: base_integration_1.StatusCode.INVALID_ARGUMENT,
                                        details: [
                                            {
                                                '@type': 'type.googleapis.com/google.rpc.DebugInfo',
                                                detail: "expected = okta.v1.user (lowercase), got = ".concat(req.kinds.join(', ')),
                                            },
                                        ],
                                    },
                                }];
                        }
                        timestamp = new Date().toISOString();
                        return [4 /*yield*/, (0, okta_api_1.callOktaAPI)(this, {
                                url: '/api/v1/users',
                                transform: function (user) { return ({
                                    id: [OKTA_DOMAIN, user.id].join('/users/'),
                                    kind: 'okta.v1.User',
                                    email: user.profile.email,
                                    displayName: [user.profile.firstName, user.profile.lastName]
                                        .filter(Boolean)
                                        .join(' '),
                                    labels: {
                                        oktaId: user.id,
                                        managerId: user.profile.managerId || '',
                                        timestamp: timestamp,
                                    },
                                }); },
                            })];
                    case 1:
                        _a = _c.sent(), status = _a.status, oktaUserResources = _a.response.data;
                        oktaUserMapById = oktaUserResources.reduce(function (acc, r) {
                            var _a;
                            return (__assign(__assign({}, acc), (_a = {}, _a[r.labels.oktaId] = r, _a[r.email] = r, _a)));
                        }, {});
                        oktaUserResources.forEach(function (user) {
                            // check if managerId is an email, then update to okta id for uniqueness
                            if (user.labels.managerId && user.labels.managerId.includes('@')) {
                                if (oktaUserMapById[user.labels.managerId]) {
                                    user.labels.managerId =
                                        oktaUserMapById[user.labels.managerId].labels.oktaId;
                                }
                            }
                        });
                        if (!!APP_ID) return [3 /*break*/, 2];
                        _b = { response: { data: [] } };
                        return [3 /*break*/, 4];
                    case 2: return [4 /*yield*/, (0, okta_api_1.callOktaAPI)(this, {
                            url: "/api/v1/apps/".concat(APP_ID, "/users"),
                            transform: function (appuser) { return ({
                                id: [OKTA_DOMAIN, appuser.id].join("/api/v1/apps/".concat(APP_ID, "/users/")),
                                kind: 'okta.v1.AppUser',
                                email: appuser.profile.email,
                                displayName: [appuser.profile.firstName, appuser.profile.lastName]
                                    .filter(Boolean)
                                    .join(' '),
                                labels: {
                                    oktaAppId: APP_ID,
                                    oktaId: appuser.id,
                                    slackId: appuser.externalId,
                                    managerId: oktaUserMapById[appuser.id]
                                        ? oktaUserMapById[appuser.id].labels.managerId
                                        : '',
                                    slackUsername: appuser.profile.slackUsername,
                                    timestamp: timestamp,
                                },
                            }); },
                        })];
                    case 3:
                        _b = _c.sent();
                        _c.label = 4;
                    case 4:
                        appUserResources = (_b).response.data;
                        slackUserResources = (appUserResources.length > 0 ? appUserResources : oktaUserResources).map(function (r) {
                            return pick({
                                // Due to missing slack app ID this pull webhook resolves based on email
                                id: r.labels.slackId || '',
                                displayName: r.displayName,
                                kind: 'slack/user',
                                email: r.email,
                                labels: {
                                    oktaId: r.labels.oktaId,
                                    managerId: r.labels.managerId,
                                    timestamp: timestamp,
                                },
                            });
                        });
                        resources = __spreadArray(__spreadArray(__spreadArray([], oktaUserResources, true), appUserResources, true), slackUserResources, true);
                        console.log({
                            resources: resources,
                        });
                        return [2 /*return*/, { status: status, resources: resources }];
                }
            });
        });
    };
    return OktaUserIntegration;
}(base_integration_1.BaseHttpIntegration));
exports.OktaUserIntegration = OktaUserIntegration;
var pick = function (obj) {
    return Object.keys(obj).reduce(function (acc, key) {
        var _a;
        return (__assign(__assign({}, acc), (typeof obj[key] !== 'undefined' && obj[key]
            ? (_a = {}, _a[key] = obj[key], _a) : {})));
    }, {});
};
//# sourceMappingURL=okta-user.js.map